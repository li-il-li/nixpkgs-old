
@software{noauthor_awesome_2022,
	title = {Awesome Nix},
	rights = {{CC}0-1.0},
	url = {https://github.com/nix-community/awesome-nix},
	abstract = {ðŸ˜Ž A curated list of the best resources in the Nix community [maintainer=@houstdav000]},
	publisher = {Nix community projects},
	urldate = {2022-07-31},
	date = {2022-07-31},
	note = {original-date: 2019-05-15T14:59:41Z},
	keywords = {awesome, awesome-list, lists, nix, nixos},
}

@online{noauthor_flakes_nodate,
	title = {Flakes - {NixOS} Wiki},
	url = {https://nixos.wiki/wiki/Flakes},
	urldate = {2022-07-31},
}

@online{noauthor_module_nodate,
	title = {Module - {NixOS} Wiki},
	url = {https://nixos.wiki/wiki/Module},
	urldate = {2022-07-31},
	file = {Module - NixOS Wiki:/Users/dario/Zotero/storage/WV4ZSRKX/Module.html:text/html},
}

@online{noauthor_nixos_nodate,
	title = {{NixOS} Configuration with Flakes - jd},
	url = {https://jdisaacs.com/blog/nixos-config/},
	urldate = {2022-07-30},
	keywords = {*},
	file = {NixOS Configuration with Flakes - jd:/Users/dario/Zotero/storage/VKV6RAWY/nixos-config.html:text/html},
}

@software{litak_nixos-infect_2022,
	title = {{NixOS}-Infect},
	rights = {{GPL}-3.0},
	url = {https://github.com/elitak/nixos-infect},
	abstract = {[{GPLv}3+] install nixos over the existing {OS} in a {DigitalOcean} droplet (and others with minor modifications)},
	author = {Litak, Eric},
	urldate = {2022-07-30},
	date = {2022-07-30},
	note = {original-date: 2016-04-18T22:10:28Z},
}

@online{noauthor_novice_nodate,
	title = {Novice Nix: Flake Templates},
	url = {https://peppe.rs},
	shorttitle = {Novice Nix},
	abstract = {a static site \{for, by, about\} me},
	urldate = {2022-07-30},
	langid = {english},
}

@online{noauthor_nix_nodate,
	title = {Nix Flakes: Exposing and using {NixOS} Modules - Xe},
	url = {https://xeiaso.net/blog/nix-flakes-3-2022-04-07},
	urldate = {2022-07-30},
	file = {Nix Flakes\: Exposing and using NixOS Modules - Xe:/Users/dario/Zotero/storage/ATYM74WV/nix-flakes-3-2022-04-07.html:text/html},
}

@online{noauthor_nix_nodate-1,
	title = {Nix Flakes: Packages and How to Use Them - Xe},
	url = {https://xeiaso.net/blog/nix-flakes-2-2022-02-27},
	urldate = {2022-07-30},
	file = {Nix Flakes\: Packages and How to Use Them - Xe:/Users/dario/Zotero/storage/7EFADJ3Z/nix-flakes-2-2022-02-27.html:text/html},
}

@online{noauthor_what_nodate,
	title = {What Is Nix and Why You Should Use It},
	url = {https://serokell.io/blog/what-is-nix},
	abstract = {Learn how the Nix package manager can help you make the development process more efficient and simpler.},
	titleaddon = {Serokell Software Development Company},
	urldate = {2022-07-30},
	langid = {english},
	file = {Snapshot:/Users/dario/Zotero/storage/T5SG8AAI/what-is-nix.html:text/html},
}

@online{noauthor_practical_nodate,
	title = {Practical Nix Flakes},
	url = {https://serokell.io/blog/practical-nix-flakes},
	abstract = {Learn about Nix, Nix flakes, and how to use Nix flakes to build applications in various languages.},
	titleaddon = {Serokell Software Development Company},
	urldate = {2022-07-30},
	langid = {english},
	keywords = {*},
	file = {Snapshot:/Users/dario/Zotero/storage/JDN4LYF7/practical-nix-flakes.html:text/html},
}

@online{noauthor_nix_nodate-2,
	title = {Nix Flakes: an Introduction - Xe},
	url = {https://xeiaso.net/blog/nix-flakes-1-2022-02-21},
	urldate = {2022-07-30},
	file = {Nix Flakes\: an Introduction - Xe:/Users/dario/Zotero/storage/542Z3VZ3/nix-flakes-1-2022-02-21.html:text/html},
}

@video{noauthor_nixos_nodate-1,
	title = {{NixOS} Playlist},
	url = {https://www.youtube.com/watch?v=jf0nIn2oS8A},
	abstract = {In this video I go over the {NixOS} filesystem layout and how it differs from a regular Linux distribution.},
	urldate = {2022-07-30},
	langid = {british},
	file = {Snapshot:/Users/dario/Zotero/storage/APTQSY4Q/playlist.html:text/html},
}

@online{noauthor_learn_nodate,
	title = {Learn nix in Y Minutes},
	url = {https://learnxinyminutes.com/docs/nix/},
	urldate = {2022-07-30},
	file = {Learn nix in Y Minutes:/Users/dario/Zotero/storage/UXPPRDPA/nix.html:text/html},
}

@online{noauthor_nix_nodate-3,
	title = {Nix Expression Language - {NixOS} Wiki},
	url = {https://nixos.wiki/wiki/Nix_Expression_Language#Functions},
	urldate = {2022-07-30},
	file = {Nix Expression Language - NixOS Wiki:/Users/dario/Zotero/storage/BXJCB96K/Nix_Expression_Language.html:text/html},
}

@online{noauthor_nix_nodate-4,
	title = {Nix tutorial â€” nix-tutorial documentation},
	url = {https://nix-tutorial.gitlabpages.inria.fr/nix-tutorial/index.html},
	urldate = {2022-07-30},
	file = {Nix tutorial â€” nix-tutorial documentation:/Users/dario/Zotero/storage/FGFGCX7T/index.html:text/html},
}

@video{san_francisco_bay_area_techies_nix_2021,
	title = {Nix + Docker, a match made in heaven},
	url = {https://www.youtube.com/watch?v=WP_oAmV6C2U},
	author = {{San Francisco Bay Area Techies}},
	urldate = {2022-07-30},
	date = {2021-01-02},
}

@software{noauthor_flake-utils_2022,
	title = {flake-utils},
	rights = {{MIT}},
	url = {https://github.com/numtide/flake-utils},
	abstract = {Pure Nix flake utility functions},
	publisher = {Numtide},
	urldate = {2022-07-29},
	date = {2022-07-29},
	note = {original-date: 2020-04-11T13:21:34Z},
	keywords = {nix, flake, nix-flake},
}

@software{noauthor_gum_2022,
	title = {Gum},
	rights = {{MIT}},
	url = {https://github.com/charmbracelet/gum},
	abstract = {A tool for glamorous shell scripts ðŸŽ€},
	publisher = {Charm},
	urldate = {2022-07-29},
	date = {2022-07-29},
	note = {original-date: 2022-06-10T22:09:42Z},
}

@online{noauthor_home-manager_nodate,
	title = {home-manager AppendixÂ A.Â Configuration Options},
	url = {https://nix-community.github.io/home-manager/options.html},
	urldate = {2022-07-29},
	file = {AppendixÂ A.Â Configuration Options:/Users/dario/Zotero/storage/B5GGLF9J/options.html:text/html},
}

@software{lyons_dustins_2022,
	title = {Dustin's Nix / {NixOS} config},
	url = {https://github.com/dustinlyons/nixos-config},
	abstract = {My {NixOS} config},
	author = {Lyons, Dustin},
	urldate = {2022-07-28},
	date = {2022-06-22},
	note = {original-date: 2021-10-22T07:25:20Z},
}

@software{lejeune_nix_2022,
	title = {Nix System Configuration},
	rights = {{MIT}},
	url = {https://github.com/kclejeune/system},
	abstract = {Declarative system configurations using {nixOS}, nix-darwin, and home-manager},
	author = {{LeJeune}, Kennan},
	urldate = {2022-07-28},
	date = {2022-07-22},
	note = {original-date: 2020-07-02T06:19:11Z},
	keywords = {nix, nixos, flake, darwin, dotfiles, home-manager, vim},
}

@online{noauthor_declarative_nodate,
	title = {Declarative {macOS} Configuration Using nix-darwin And home-manager - xynos space},
	url = {https://xyno.space/post/nix-darwin-introduction},
	urldate = {2022-07-28},
	file = {Declarative macOS Configuration Using nix-darwin And home-manager - xynos space:/Users/dario/Zotero/storage/9AUYBE98/nix-darwin-introduction.html:text/html},
}

@video{matthias_benaets_nixos_2022,
	title = {{NixOS} Setup Guide - Configuration / Home-Manager / Flakes},
	url = {https://www.youtube.com/watch?v=AGVXJ-TIv3Y},
	abstract = {!!!Resources, Timestamps, and Extra Notes Below!!!
--------------------
In this mini-course I try to demystify the whole process of setting up {NixOS} on your personal system. 
This course covers:
- {NixOS} (configuration.nix and hardware-configuration.nix)
- Home Manager (home.nix)
- Flakes (flake.nix)

This video is for entertainment purposes only.
Some aspects/topics might change in future updates.
Not everything is 100\% correctly explained or information is left out. This is done to get the point across and keep everything accessible for newcomers.
--------------------
Notes ( that I forgot to mention and will probably  be updated with more information):
- Flakes are currently only supported on the unstable version of {NixOS}
- Home-Manager can be updated again by just running: 
     \$ nix-channel --update
- Changing *by-uuid* in hardware-configuration.nix to *by-label*, does not mean you can always use this for other systems as mentioned at 0:55:00. Depending on your system, other kernel modules are needed for the system. In this case, it's highly recommended to still run: 
    \# nixos-generate-config --root /mnt
But this is useful if you want to reinstall the profile on the same formatted system.
- nix.settings.auto-optimise-store is currently only available on unstable
- I know it's curly. But I like squirly :)
--------------------
Resources:
  {NixOS}:
    1. {NixOS} Website: https://nixos.org/
    2. {NixOS} Manual: https://nixos.org/manual/nixos/stable/
    3. {NixOS} Packages \& Options: https://search.nixos.org/packages
    4. {NixOS} Wiki: https://nixos.wiki/wiki/Main\_Page
  Home-Manager:
    5. Home-Manager: https://github.com/nix-community/home...
    6. Home-Manager Manual: https://nix-community.github.io/home-...
    7. Home-Manager Appendix A: https://nix-community.github.io/home-...
    8. Home-Manager Appendix B: https://nix-community.github.io/home-...
  Examples:
    9. Personal Flake: https://github.com/{MatthiasBenaets}/ni... 
    10. List of reference configurations: https://nixos.wiki/wiki/Configuration...
  Extras:
    11. {NixOS} Learn: https://nixos.org/learn.html/
    12. Nix Pills: https://nixos.org/guides/nix-pills/
--------------------
Timestamps:
0:00:00 Introduction
0:02:25 {NixOS}
0:08:35 Live {CD}
0:13:00 Partitioning
0:22:00 Configuration.nix
0:53:55 Hardware-configuration.nix
0:56:00 System Installation
1:00:35 Installing Packages
1:21:25 {NixOS} Extras
1:29:35 Home-Manager
1:33:00 Home-Manager  Setup
1:45:28 Home-Manager Configuration
1:57:50 Flakes
2:02:10 Flakes Setup
2:07:47 Flakes {NixOS}
2:20:23 Flakes Home-Manager
2:34:25 Flakes Extra
2:40:18 Personal Configuration
--------------------
Enjoyed the course and want to tip? https://www.paypal.com/donate/?hosted...},
	author = {{Matthias Benaets}},
	urldate = {2022-07-22},
	date = {2022-04-12},
}

@software{bourgon_my_2022,
	title = {My Nix Configs},
	rights = {{MIT}},
	url = {https://github.com/malob/nixpkgs},
	abstract = {My Nix system configs!},
	author = {Bourgon, Malo},
	urldate = {2022-07-22},
	date = {2022-07-22},
	note = {original-date: 2019-03-29T03:05:42Z},
	keywords = {nix, nix-flake, dotfiles, home-manager, neovim, nix-configs, nix-darwin, nix-dotfiles, nix-expressions, nixpkgs},
}

@video{replit_nix_2022,
	title = {Nix: A Deep Dive},
	url = {https://www.youtube.com/watch?v=TsZte_9GfPE},
	shorttitle = {Nix},
	abstract = {A deep dive on Nix: what Nix is, why you should use it, and how it works.},
	author = {{Replit}},
	urldate = {2022-07-21},
	date = {2022-04-18},
}

@software{borja_mk-darwin-system_2022,
	title = {mk-darwin-system},
	rights = {Apache-2.0},
	url = {https://github.com/vic/mk-darwin-system},
	abstract = {Small Nix utility to create an M1 aarch64-darwin ({nixFlakes} + nix-darwin + home-manager) system.},
	author = {Borja, Victor},
	urldate = {2022-08-02},
	date = {2022-07-25},
	note = {original-date: 2021-07-04T03:47:40Z},
	keywords = {nix, nixos, home-manager, nix-darwin, apple-m1, apple-m1-silicon, apple-sillicon},
}

@online{noauthor_nix_nodate-5,
	title = {Nix Package Versions},
	url = {https://lazamar.co.uk/nix-versions/},
	urldate = {2022-08-03},
	file = {Nix Package Versions:/Users/dario/Zotero/storage/XHDVM9LR/nix-versions.html:text/html},
}

@online{noauthor_nix_2020,
	title = {Nix: override packages with overlays {\textbar} Whisper of the Heartman},
	url = {https://blog.thomasheartman.com/nix-override-packages-with-overlays},
	shorttitle = {Nix},
	abstract = {In which we take a first look at Nix overlays, a mechanism which allows you to override and modify the package sets, and at how we can use that to get more up-to-date versions of our tools.},
	urldate = {2022-08-09},
	date = {2020-03-02},
	langid = {english},
	file = {Snapshot:/Users/dario/Zotero/storage/A6VDG6QL/nix-override-packages-with-overlays.html:text/html},
}

@online{noauthor_ysndr_nodate,
	title = {y{\textbar}sndr - One too many shell},
	url = {https://blog.ysndr.de/posts/guides/2021-12-01-nix-shells/index.html},
	abstract = {Clearing up with nix' shells nix shell and nix-shell},
	urldate = {2022-08-12},
	langid = {english},
	file = {Snapshot:/Users/dario/Zotero/storage/BGLQ5QMU/2021-12-01-nix-shells.html:text/html},
}

@thesis{dolstra_purely_2006,
	location = {S.l.},
	title = {The purely functional software deployment model},
	institution = {[s.n.]},
	type = {phdthesis},
	author = {Dolstra, Eelco},
	date = {2006},
	langid = {english},
	note = {{ISBN}: 9789039341308
{OCLC}: 71702886},
	file = {Dolstra - 2006 - The purely functional software deployment model.pdf:/Users/dario/Zotero/storage/A8QFXMXG/Dolstra - 2006 - The purely functional software deployment model.pdf:application/pdf},
}

@software{davhau_mach-nix_2022,
	title = {mach-nix},
	rights = {{MIT}},
	url = {https://github.com/DavHau/mach-nix},
	abstract = {Create highly reproducible python environments},
	author = {{DavHau}},
	urldate = {2022-08-15},
	date = {2022-08-15},
	note = {original-date: 2020-04-22T09:32:18Z},
	keywords = {nix, nixos, nixpkgs, mach-nix, nix-expression, python, python-deps, python-environment, python-packages, reproducibility},
}

@online{noauthor_compiling_2022,
	title = {Compiling Rust projects with Nix},
	url = {https://www.sobyte.net/post/2022-08/rust-nix/},
	abstract = {Learn how to compile Rust projects using Nix},
	urldate = {2022-08-19},
	date = {2022-08-03},
	langid = {english},
	note = {Section: post},
	file = {Snapshot:/Users/dario/Zotero/storage/MD726K6D/rust-nix.html:text/html},
}

@software{noauthor_nix-communitydream2nix_2022,
	title = {nix-community/dream2nix},
	rights = {{MIT}},
	url = {https://github.com/nix-community/dream2nix},
	abstract = {Nixify software with less effort [maintainer=@{DavHau}]},
	publisher = {Nix community projects},
	urldate = {2022-08-19},
	date = {2022-08-19},
	note = {original-date: 2021-09-03T15:30:51Z},
	keywords = {2nix, dream-to-nix, lang2nix, nix, nixos, nodejs, package-management, reproducibility, rust},
}